@model Library.PL.ViewModels.LoginVM

@{
    ViewData["Title"] = "Login";
}

@{ 
    var msg = ViewBag.Error as string;
    var confirmEmail = TempData["ConfirmEmail"] as string;
    var changePassword = TempData["ChangePassword"] as string;
    var logout = TempData["Logout"] as string;

}



<div class="col-12  py-5 my-4 container">
    <h4 class="card-title mb-4 bg-primary text-light p-2  text-center">Sign In</h4>
    <div class="card py-3 px-4  border border-1 border-dark rounded-5  ">
        <div class="card-body ">
            <form class="forms-sample row flex-column align-items-center gap-4" asp-controller="Accounts" asp-action="Login">
                <div class="form-group d-flex flex-column  col-xl-4 col-lg-4 col-md-6 col-sm-9 p-0">
                    <label for="exampleInputEmail1">Email</label>
                    <input asp-for="Email" class="form-control border bordr-1 border-dark text-dark" />
                    <span asp-validation-for="Email" class="text-danger"></span>

                </div>

                <div class="form-group d-flex flex-column  col-xl-4 col-lg-4 col-md-6 col-sm-9 p-0">
                    <label for="exampleInputPassword1">Password</label>
                    <input asp-for="Password" class="form-control border bordr-1 border-dark text-dark" />
                    <span asp-validation-for="Password" class="text-danger"></span>

                </div>
                <div class="form-group d-flex gap-3 align-items-center col-xl-4 col-lg-4 col-md-6 col-sm-9 p-0">
                    <input asp-for="RememberMe" class="form-check-input border border-1 border-dark" type="checkbox" />
                    <label asp-for="RememberMe" class="form-check-label">Remember Me</label>
                </div>
                <button type="submit" class="btn btn-primary col-xl-4 col-lg-4 col-md-6 col-sm-9">Submit</button>
            </form>
            <a asp-controller="Accounts" asp-action="ForgotPassword" class="d-flex justify-content-center mt-3"> Forgot Password ?</a>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        window.onload = () => {
             if ("@msg" !== "") {
const Toast = Swal.mixin({
  toast: true,
  position: "top-end",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.onmouseenter = Swal.stopTimer;
    toast.onmouseleave = Swal.resumeTimer;
  }
});
Toast.fire({
  icon: "error",
  title: "Invalid Email or Password"
});

 }
            if ("@confirmEmail" !== "") {

                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "success",
                    title: "@confirmEmail"
                });

            }

            if ("@changePassword" !== "") {

    const Toast = Swal.mixin({
        toast: true,
        position: "top-end",
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.onmouseenter = Swal.stopTimer;
            toast.onmouseleave = Swal.resumeTimer;
        }
    });
    Toast.fire({
        icon: "success",
        title: "@changePassword"
    });

            }

                         if ("@logout" !== ""  ) {
const Toast = Swal.mixin({
  toast: true,
  position: "top-end",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.onmouseenter = Swal.stopTimer;
    toast.onmouseleave = Swal.resumeTimer;
  }
});
Toast.fire({
  icon: "success",
    title: "You logout successfully"
});

 }

        }


    </script>


}