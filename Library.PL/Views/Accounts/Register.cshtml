@model Library.PL.ViewModels.RegisterVM

@{
    ViewData["Title"] = "Register";
}

@{
    var msg = TempData["Error"] as string;

        var emailExist = ViewBag.EmailExist as string;


    }

    <div class="col-12  p-5 px-5 my-4 container">
        <h4 class="mb-4 bg-primary text-light p-2 text-center ">Sign Up</h4>
        <div class="card py-3 px-1  border border-1 border-dark rounded-5 ">
            <div class="card-body ">
                <form class="forms-sample row flex-column align-items-center gap-3" asp-controller="Accounts" asp-action="Register" enctype="multipart/form-data">

                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="Image">User Image</label>
                        <input asp-for="Image" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="Image" class="text-danger"></span>

                    </div>
                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="UserName">User Name</label>
                        <input asp-for="UserName" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="UserName" class="text-danger"></span>

                    </div>
                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="Email">Email</label>
                        <input asp-for="Email" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="Email" class="text-danger"></span>

                    </div>
                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="Password">Password</label>
                        <input asp-for="Password" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="Password" class="text-danger"></span>

                    </div>
                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="ConfirmPassword">Confirm Password</label>
                        <input asp-for="ConfirmPassword" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>

                    </div>
                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="PhoneNumber">Phone</label>
                        <input asp-for="PhoneNumber" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>

                    </div>
                    <div class="form-group d-flex flex-column align-content-center col-xl-4 col-lg-5 col-md-7 col-sm-9 p-0">
                        <label asp-for="Address">Address</label>
                        <input asp-for="Address" class="form-control border bordr-1 border-dark text-dark">
                        <span asp-validation-for="Address" class="text-danger"></span>

                    </div>
                    <button type="submit" class="btn btn-primary col-xl-4 col-lg-5 col-md-7 col-sm-9 ">Register</button>
                </form>
            </div>
        </div>
    </div>

    @section Scripts{
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>

        window.onload = () => {
             if ("@msg" !== "") {
const Toast = Swal.mixin({
  toast: true,
  position: "top-end",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.onmouseenter = Swal.stopTimer;
    toast.onmouseleave = Swal.resumeTimer;
  }
});
Toast.fire({
  icon: "error",
  title: "@msg"
});

            }
                          if ("@emailExist" !== "") {
const Toast = Swal.mixin({
  toast: true,
  position: "top-end",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.onmouseenter = Swal.stopTimer;
    toast.onmouseleave = Swal.resumeTimer;
  }
});
Toast.fire({
  icon: "error",
  title: "@emailExist"
});

 }

        }


        </script>


    }
